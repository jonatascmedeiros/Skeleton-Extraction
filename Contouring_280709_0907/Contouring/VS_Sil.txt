attribute vec3 tangent;
attribute vec3 flatN;
attribute float width;

void main(void)
{
	vec3 P = vec3(gl_ModelViewMatrix * gl_Vertex);       
	vec3 N = normalize(gl_NormalMatrix * flatN);
	vec3 T = normalize(gl_NormalMatrix * tangent);
	vec3 E = -P;
	float EdotN = dot(E, N);
	float EdotT = dot(E, T);
	float extend = width * (length(E)/75.0);
	vec4 newPos = gl_ModelViewProjectionMatrix * vec4(vec3(gl_Vertex) + gl_Normal * extend, 1.0);
		
		
	if((EdotN * EdotT) < 0.0)	// silhouette detection
	{
		if (EdotN > 0.0)	// extend only the front facing vertices
		{
			newPos = gl_ModelViewProjectionMatrix * vec4(vec3(gl_Vertex) - gl_Normal * extend, 1.0);
		}
		gl_FrontColor = vec4(0.0, 0.0, 0.0, 1.0);
	}
	else
	{
		gl_FrontColor = vec4(0.0, 0.0, 0.0, 0.0);		
	}
	
	gl_Position = newPos;
}